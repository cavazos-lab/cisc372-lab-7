USING CUDA.ACAD FOR GPU PROGRAMMING
========================================================================

LOGGING INTO CUDA.ACAD
------------------------------------------------------------------------

	Machine name is: cuda.acad.ece.udel.edu
	Username is your eecis username
	Password is your eecis password

	If you do not have an EECIS account, request one!

ENVIRONMENT SETUP
------------------------------------------------------------------------

NOTE:
	The following instructions will assume that you are using the BASH shell (Bourne Again Shell)
	To switch to bash, invoke the following command: "exec /bin/bash" or "bash"

1.  Log into cuda.acad.ece.udel.edu using eecis user name/password
	

INSTALLING THE NVIDIA GPU COMPUTING SDK (OPTIONAL)
------------------------------------------------------------------------

1.  Copy the CUDA samples (version 6.5) with the following command:

	/usr/local/bin/cuda-install-samples-6.5.sh   ~
    
2.  Goto directory 0_Simple/VectorAdd or 1_Utility/DeviceQuery

	type "make"

    Executables are generated 
			
REFERENCING EXAMPLE CODE (CUDA/C)
------------------------------------------------------------------------

	CUDA Examples are found under each subfolder of NVIDIA_CUDA-V6.5_samples
	

COMPILING CODE
------------------------------------------------------------------------

To compile an example program/lab: invoke "make" from the sample lab folder you 
are trying to compile.

	CUDA:
		make 

If you choose to remember compiling commands well, feel free to reference a 
brief guide to compiling various code below.

CUDA:
	
	nvcc [nvcc options] <inputfiles>
	
	e.g. nvcc -O2  -o matmul matmul.cu
	
RUNNING CODE
------------------------------------------------------------------------

cuda.acad uses Simple Linux Utility for Resource Management (SLURM) to manage 
the GPUs. In order to run code on the GPUs we need to request access to the GPU.

To request access we issue the following command:

	srun -N1 --gres=gpu:1 <path to executable>

Notes:

  * Do not change -N1 (we only have one node available)
  * If running on multiple GPUs (not likely) then change the number for 
  -gres=gpu:1 to the desired number <= 4

example execution:
	srun -N1 --gres=gpu:1 ./deviceQuery 
	or
	srun -N1 --gres=gpu:1 ./vectorAdd

ADDITIONAL INFORMATION
------------------------------------------------------------------------

EECIS CUDA system documentation: https://www.eecis.udel.edu/wiki/ececis-docs/index.php/FAQ/Applications#toc21
NVIDIA GPU Computing SDK info from NVIDIA: http://developer.nvidia.com/gpu-computing-sdk
